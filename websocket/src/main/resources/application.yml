logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter: DEBUG

server:
  port: '8080'
  error:
    include-binding-errors: always
    include-message: always
management:
  security:
    enabled: false
management.endpoint.health.probes.enabled: true

spring:
  main:
    allow-bean-definition-overriding: true
  jackson:
    property-naming-strategy: SNAKE_CASE
  jpa:
    hibernate:
      ddl-auto: none
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  datasource:
    url: "jdbc:postgresql://localhost:5432/web_socket?stringtype=unspecified"
    username: postgres
    password: 123456
#  kafka:
#    properties:
#      bootstrap.servers: 159.223.81.203:9093
#      security.protocol: PLAINTEXT
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.ByteArraySerializer
#    consumer:
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
  mvc:
    async:
      request-timeout: 120000